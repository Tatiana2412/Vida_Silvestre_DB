{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\n\n// Esta es la función para listar animales\nexport const listarAnimales = async () => {\n  const response = await fetch('/listar_animales/');\n  if (!response.ok) {\n    throw new Error('Error al obtener los animales');\n  }\n  return await response.json();\n};\nexport const crearAnimal = async animal => {\n  const response = await fetch(`${API_URL}/crear_animal/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(animal)\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","listarAnimales","response","fetch","ok","Error","json","crearAnimal","animal","method","headers","body","JSON","stringify"],"sources":["C:/Users/Alexi/OneDrive/Documentos/ByteBuilders/zoologico-frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\n// Esta es la función para listar animales\nexport const listarAnimales = async () => {\n    const response = await fetch('/listar_animales/');\n    if (!response.ok) {\n        throw new Error('Error al obtener los animales');\n    }\n    return await response.json();\n};\n\n\nexport const crearAnimal = async (animal) => {\n  const response = await fetch(`${API_URL}/crear_animal/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(animal),\n  });\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE7C;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;EACjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAChC,CAAC;AAGD,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,gBAAgB,EAAE;IACvDY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM;EAC7B,CAAC,CAAC;EACF,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}